user root;
worker_processes auto;
error_log logs/error.log warn;
events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  logs/access.log  main;
    sendfile        on;
    keepalive_timeout  65;
    
    server {
        listen 80;
        location /image {
            proxy_pass http://127.0.0.1:60999;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Add other proxy settings if needed (e.g., timeouts, buffer sizes)
        }
        
    } # end server
    
    server {
        listen 443 ssl;
        error_log logs/horizon_error.log;
        
        access_log logs/horizon_access.log main;
        
        ssl_certificate /etc/pki/tls/certs/vengd.pem;
        
        ssl_certificate_key /etc/pki/tls/private/vengd.pem;
        
        ssl_protocols ssl_protocols TLSv1.2 TLSv1.3;
        
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK; # default format
        
        
        proxy_ssl_verify off;
        
        location /image {
            proxy_pass http://127.0.0.1:60999;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Add other proxy settings if needed (e.g., timeouts, buffer sizes)
        }
        
        if ($request_uri ~ "^/$") {
            set $rule_0 1$rule_0;
        }
        if ($request_uri !~ "^/placement") {
            set $rule_0 2$rule_0;
        }
        if ($rule_0 = "21") {
            rewrite /(.*) https://$server_name$request_uri permanent;
        }
        
    } # end server
    
} # end http
